@using Fluxor
@using Lyra.Data.API.WorkFlow
@using Microsoft.Extensions.Configuration
@using Nebula.Store.WebWalletUseCase

<div class="container">
    <div class="nw">
        <MudAvatar Color="Color.Primary">@Dao.Name.First()</MudAvatar>
        <div>@Dao.Name</div>
    </div>
    <div class="nw">
        @Otc.Order.crypto   
    </div>
    <div class="nw price">
        @Otc.Order.price @Otc.Order.fiat
    </div>
    <div class="nw">
         Available: @Otc.Order.amount<br />
         Limits: 5,000 - 12,000 USD
    </div>
    <div>
        <MudButton Variant="Variant.Filled" OnClick="@ShowCreateTradeUI" Color="Color.Primary">@(Otc.Order.dir == TradeDirection.Sell ? "Buy" : "Sell")</MudButton>
    </div>
</div>

@code {
    [Parameter]
    public IOtcOrder Otc { get; set; }

    [Parameter]
    public IDao Dao { get; set; }

    [Parameter]
    public EventCallback<IOtcOrder> OrderSelected { get; set; }

    [Inject]
    IConfiguration Configuration { get; set; }

    [Inject]
    private IState<WebWalletState> walletState { get; set; }

    [Inject] NavigationManager Navigation { get; set; }

    private async Task ShowCreateTradeUI()
    {
        await OrderSelected.InvokeAsync(Otc);
    }

}
