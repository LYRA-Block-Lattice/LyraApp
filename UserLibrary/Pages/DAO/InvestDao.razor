@page "/dao/invest/{daoid}"
@using Fluxor
@using Fluxor.Blazor.Web.Components
@using Lyra.Data.API.WorkFlow
@using Lyra.Data.Shared
@using Nebula.Store.WebWalletUseCase
@inherits BasicPage

<div class="mag">
    <h3>Invest Dao</h3>

    @if(loading)
    {
        <div style="z-index: 5;" class="spinner"></div>
    }
    else
    {
        <div>
            @dao.Name
        </div>
        <div>
            Stake Holders:
        </div>
        @foreach(var sh in dao.Treasure.OrderByDescending(a => a.Value))
        {
            <div>
                @sh.Key.Shorten() <b>@(Math.Round(sh.Value.ToRitoDecimal() * Total)) LYR</b> @(Math.Round(sh.Value.ToRitoDecimal() * 100, 4)) %
            @if(sh.Key == walletState.Value.wallet.AccountId)
                {
                    <MudIcon Title="Me" Icon="@Icons.Filled.Check" Class="mr-3 mb-n1"/>
                }
            </div>
        }
        <div>
        Invest <RadzenNumeric TValue="int" @bind-Value=@amount /> LYR
        <br />
        Minimum Amount: 10000 LYR
        <hr />
        <RadzenButton Text="Invest" Click=@Invest /> 
        <RadzenButton Text="Leave" Click=@Leave />
        </div>
    }

</div>

@code {
    [Parameter]
    public string daoid { get; set; }

    public override string DaoId => daoid;
    public override string Title => "Invest to DAO";

    int amount;

    async Task Invest()
    {
        try
        {
            var invret = await walletState.Value.wallet.JoinDAOAsync(DaoId, amount);
            if(invret.Successful())
            {
                Snackbar.Add($"Success invested to {dao.Name}", Severity.Success);
            }
            else
            {
                Snackbar.Add($"Failed to invested to {dao.Name}, {invret.ResultCode}", Severity.Error);
            }
        }
        catch(Exception ex)
        {
            Snackbar.Add($"Failed to invested to {dao.Name}, {ex.Message}", Severity.Error);
        }
    }

    async Task Leave()
    {
        var invret = await walletState.Value.wallet.LeaveDAOAsync(DaoId);
        if(invret.Successful())
        {
            Snackbar.Add($"Success left {dao.Name}", Severity.Success);
        }
        else
        {
            Snackbar.Add($"Failed to leave {dao.Name}, {invret.ResultCode}", Severity.Error);
        }
    }

    decimal Total => (dao as TransactionBlock).Balances["LYR"].ToBalanceDecimal();
}
