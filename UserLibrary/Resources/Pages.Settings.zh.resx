<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="App Settings" xml:space="preserve">
    <value>设置</value>
  </data>
  <data name="Backup Wallet" xml:space="preserve">
    <value>备份钱包</value>
  </data>
  <data name="Balance:" xml:space="preserve">
    <value>余额：</value>
  </data>
  <data name="Check New Version" xml:space="preserve">
    <value>检查新版本</value>
  </data>
  <data name="Close Wallet" xml:space="preserve">
    <value>关闭钱包</value>
  </data>
  <data name="Current voting for:" xml:space="preserve">
    <value>当前投票给：</value>
  </data>
  <data name="Current wallet's address is:" xml:space="preserve">
    <value>当前钱包的地址：</value>
  </data>
  <data name="Current wallet's balance is:" xml:space="preserve">
    <value>当前钱包的余额：</value>
  </data>
  <data name="Current wallet's name is:" xml:space="preserve">
    <value>当前钱包的名称：</value>
  </data>
  <data name="Dealer Panel" xml:space="preserve">
    <value>交易服务器设置</value>
  </data>
  <data name="Error checking version:" xml:space="preserve">
    <value>检查版本时发生错误：</value>
  </data>
  <data name="Found new version {0}, my version {1}" xml:space="preserve">
    <value>发现新版本 {0}，我的版本是 {1}</value>
  </data>
  <data name="Genesis" xml:space="preserve">
    <value>创世</value>
  </data>
  <data name="In Transactions:" xml:space="preserve">
    <value>于交易中：</value>
  </data>
  <data name="Lyra Library Version:" xml:space="preserve">
    <value>区块链版本：</value>
  </data>
  <data name="Main Program Version:" xml:space="preserve">
    <value>主程序版本：</value>
  </data>
  <data name="My version {0} is up to date." xml:space="preserve">
    <value>我的版本 {0} 已是最新。</value>
  </data>
  <data name="Null" xml:space="preserve">
    <value>空</value>
  </data>
  <data name="Open Wallet" xml:space="preserve">
    <value>打开钱包</value>
  </data>
  <data name="Please backup private key properly if you want to open this wallet again." xml:space="preserve">
    <value>请妥善备份私钥以免钱包余额丢失。</value>
  </data>
  <data name="Processing" xml:space="preserve">
    <value>处理中</value>
  </data>
  <data name="Receive from" xml:space="preserve">
    <value>接收自</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>保存</value>
  </data>
  <data name="Scan to Pay Me" xml:space="preserve">
    <value>扫码付给我</value>
  </data>
  <data name="Send to" xml:space="preserve">
    <value>发送至</value>
  </data>
  <data name="Show Last 10 Transactions" xml:space="preserve">
    <value>显示最新10条记录</value>
  </data>
  <data name="Unable to find a dealer." xml:space="preserve">
    <value>无法找到交易服务器。</value>
  </data>
  <data name="User Library Version:" xml:space="preserve">
    <value>库版本：</value>
  </data>
  <data name="Vote For Address" xml:space="preserve">
    <value>投票于地址：</value>
  </data>
</root>