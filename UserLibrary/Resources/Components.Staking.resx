<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Action" xml:space="preserve">
    <value>操作</value>
  </data>
  <data name="Add Staking" xml:space="preserve">
    <value>添加质押</value>
  </data>
  <data name="Add staking of {0} LYR..." xml:space="preserve">
    <value>添加 {0} LYR 到质押……</value>
  </data>
  <data name="Adding profiting account..." xml:space="preserve">
    <value>添加盈利账号……</value>
  </data>
  <data name="Adding staking account..." xml:space="preserve">
    <value>添加质押账号……</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>地址</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>取消</value>
  </data>
  <data name="Compound Mode" xml:space="preserve">
    <value>复利模式</value>
  </data>
  <data name="Compound staking mode:" xml:space="preserve">
    <value>复利质押模式：</value>
  </data>
  <data name="Confirm!" xml:space="preserve">
    <value>确认！</value>
  </data>
  <data name="Create Profiting Account" xml:space="preserve">
    <value>创建盈利账号</value>
  </data>
  <data name="Create Staking" xml:space="preserve">
    <value>创建质押</value>
  </data>
  <data name="Create Staking Account" xml:space="preserve">
    <value>创建质押账号</value>
  </data>
  <data name="Days of staking:" xml:space="preserve">
    <value>要质押的天数：</value>
  </data>
  <data name="Error: {0}" xml:space="preserve">
    <value>错误： {0}</value>
  </data>
  <data name="Failed adding staking. Error: {0}" xml:space="preserve">
    <value>添加质押失败。错误 {0}</value>
  </data>
  <data name="Failed to unstake. Error: {0}" xml:space="preserve">
    <value>移除质押失败。错误 {0}</value>
  </data>
  <data name="How many LYR do you want to stake?" xml:space="preserve">
    <value>你想质押多少 LYR？</value>
  </data>
  <data name="Merchant" xml:space="preserve">
    <value>店铺</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>名称</value>
  </data>
  <data name="Name:" xml:space="preserve">
    <value>名称：</value>
  </data>
  <data name="Node" xml:space="preserve">
    <value>节点</value>
  </data>
  <data name="Nothing changed." xml:space="preserve">
    <value>什么都没改变。</value>
  </data>
  <data name="Notice" xml:space="preserve">
    <value>通知</value>
  </data>
  <data name="Number of staking (0 - 100):" xml:space="preserve">
    <value>质押的数量 （0 - 100）</value>
  </data>
  <data name="Oracle" xml:space="preserve">
    <value>预言机</value>
  </data>
  <data name="Processing" xml:space="preserve">
    <value>处理中</value>
  </data>
  <data name="Profiting Account ID" xml:space="preserve">
    <value>盈利账号</value>
  </data>
  <data name="Profiting Accounts" xml:space="preserve">
    <value>所有盈利账号</value>
  </data>
  <data name="Ratio" xml:space="preserve">
    <value>比例</value>
  </data>
  <data name="Ratio to share to staking (0% - 100%):" xml:space="preserve">
    <value>分享给质押的比例 (0% - 100%):</value>
  </data>
  <data name="Remove staking..." xml:space="preserve">
    <value>移除质押……</value>
  </data>
  <data name="Seats" xml:space="preserve">
    <value>席位数</value>
  </data>
  <data name="Seats number" xml:space="preserve">
    <value>席位数量</value>
  </data>
  <data name="Share Ratio" xml:space="preserve">
    <value>分享比例</value>
  </data>
  <data name="Staking Accounts" xml:space="preserve">
    <value>所有质押账号</value>
  </data>
  <data name="Staking Amount" xml:space="preserve">
    <value>质押数额</value>
  </data>
  <data name="Staking Days" xml:space="preserve">
    <value>质押天数</value>
  </data>
  <data name="Staking For Address:" xml:space="preserve">
    <value>质押给地址：</value>
  </data>
  <data name="Staking has expired. It's now safe to unstake." xml:space="preserve">
    <value>质押已过期。现在可以安全移除质押。</value>
  </data>
  <data name="Staking to Account" xml:space="preserve">
    <value>质押到账号</value>
  </data>
  <data name="Staking will expire in {0:N2} Hours." xml:space="preserve">
    <value>质押在 {0} 小时后过期。</value>
  </data>
  <data name="Start Time" xml:space="preserve">
    <value>开始时间</value>
  </data>
  <data name="Success. Refreshing..." xml:space="preserve">
    <value>成功。更新中……</value>
  </data>
  <data name="Total Reward" xml:space="preserve">
    <value>奖励总额</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>类型</value>
  </data>
  <data name="Type:" xml:space="preserve">
    <value>类型：</value>
  </data>
  <data name="Unstaking" xml:space="preserve">
    <value>移除质押</value>
  </data>
  <data name="Unstaking within the promised staking period will pay 0.8% panalise fee. Are you sure you want to confirm?" xml:space="preserve">
    <value>在承诺的质押期间移除质押会被收取 0.8% 的罚金。你确认要这么做吗？</value>
  </data>
  <data name="Warning" xml:space="preserve">
    <value>警告</value>
  </data>
  <data name="Yield" xml:space="preserve">
    <value>收益</value>
  </data>
</root>