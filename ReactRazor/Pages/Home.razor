@page "/v2"
@using Fluxor;
@using Nebula.Store.WebWalletUseCase;
@inherits Fluxor.Blazor.Web.Components.FluxorComponent
@inject IJSRuntime JS;
@inject NavigationManager navigator;

<a href="/market">market</a> &nbsp;
<a href="/open-wallet">open wallet</a> &nbsp;
<a href="/create-wallet">create wallet</a> &nbsp;
<a href="/v1">Old entry</a> &nbsp;

<div id="root"></div>

@code {
    [Inject]
    private IState<WebWalletState> walletState { get; set; }

    [Inject]
    private IDispatcher Dispatcher { get; set; }

    private DotNetObjectReference<Home>? objRef;

    protected override void OnInitialized()
    {
        objRef = DotNetObjectReference.Create(this);
        base.OnInitialized();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (true)
        {
            try
            {
                await JS.InvokeVoidAsync("loadScript", "_content/ReactRazor/static/js/main.js");
                await JS.InvokeAsync<string>("lyraSetProxy", objRef);
            }
            catch(Exception ex)
            {
                Console.WriteLine($"Error loadScript: {ex.Message}");
            }
            //await JS.InvokeVoidAsync("bruic.openwallet", _react);
        }

        await base.OnAfterRenderAsync(firstRender);
    }

    [JSInvokable("Redir")]
    public Task<string> Redir(string path)
    {
        navigator.NavigateTo($"/{path}");
        return Task.FromResult($"wanna redirect to Blazor url /{path}?");
    }
}